server:
  port: 18786
  tomcat:
    basedir: ./temp/feign
  servlet:
    session:
      timeout: 60
     

spring:
  application:
    name: rent-service-niedj
  zipkin:
    base-url: http://172.17.32.58:9411
  sleuth:
    sampler:
      probability: 1.0
  redis:
    host: 172.17.11.239
    port: 6379
    #password: 123456
    timeout: 6000ms
    lettuce:
      pool:
        max-active: 8
        max-wait: -1ms
        max-idle: 8
        min-idle: 0
    database: 0
  session:
    store-type: redis

eureka:
  client:
    service-url:
#      defaultZone: http://root:root@localhost:18761/eureka/
       defaultZone: http://172.17.32.58:8000/eureka/

# feign自带断路器，但是默认是关闭的
feign:
  hystrix:
    enabled: true

#  如果hystrix.command.default.execution.timeout.enabled为true,则会有两个执行方法超时的配置,一个就是ribbon的ReadTimeout,一个就是熔断器hystrix的timeoutInMilliseconds, 此时谁的值小谁生效
#  如果hystrix.command.default.execution.timeout.enabled为false,则熔断器不进行超时熔断,而是根据ribbon的ReadTimeout抛出的异常而熔断,也就是取决于ribbon
#  ribbon的ConnectTimeout,配置的是请求服务的超时时间,除非服务找不到,或者网络原因,这个时间才会生效
#  ribbon还有MaxAutoRetries对当前实例的重试次数,MaxAutoRetriesNextServer对切换实例的重试次数, 如果ribbon的ReadTimeout超时,或者ConnectTimeout连接超时,会进行重试操作
#  通常熔断的超时时间需要配置的比ReadTimeout长,ReadTimeout比ConnectTimeout长
ribbon:
  OkToRetryOnAllOperations: false #对所有操作请求都进行重试,默认false
  ReadTimeout: 5000   #负载均衡超时时间，默认值5000
  ConnectTimeout: 2000 #ribbon请求连接的超时时间，默认值2000
  MaxAutoRetries: 0     #对当前实例的重试次数，默认0
  MaxAutoRetriesNextServer: 1 #对切换实例的重试次数，默认1
  eureka:
    enabled: true

hystrix:
  command:
    default:  #default全局有效，service id指定应用有效
      execution:
        timeout:
          enabled: true
        isolation:
          thread:
            timeoutInMilliseconds: 60000 #断路器超时时间，默认1000ms
          strategy: SEMAPHORE

management:
  endpoints:
    web:
      exposure:
        include: health,info,bus-refresh,shutdown
  endpoint:
    shutdown:
      enabled: true #是否开启优雅停机
      shutdown-time: 30 #强制停机时间(默认60)
      shutdown-time-unit: SECONDS   #强制停机时间单位(默认SECONDS)
      health-wait-time: 10 #关闭前等待健康监测时间(默认10),即在请求shutdown接口时,会延时这个时间进行Shutdown操作
      health-wait-time-unit: SECONDS   #关闭前等待健康监测时间单位(默认SECONDS),即在请求shutdown接口时,会延时这个时间进行Shutdown操作

logging:
  level:
    com.gxlu: DEBUG  # 打印FeignClient接口日志
